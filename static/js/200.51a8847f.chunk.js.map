{"version":3,"file":"static/js/200.51a8847f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","redux/Contacts/selectors.js","components/Form/Form.jsx","webpack://react-homework-template/./src/components/FilterByName/FilterByName.module.css?aec3","components/FilterByName/FilterByName.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formStyle\":\"Form_formStyle__4EIvI\",\"title\":\"Form_title__5gZHF\",\"text\":\"Form_text__c5Sr+\",\"labelStyle\":\"Form_labelStyle__mSYFx\",\"inputStyle\":\"Form_inputStyle__816Wz\",\"addButton\":\"Form_addButton__fjEsU\"};","import { createSelector } from '@reduxjs/toolkit';\nexport const selectFilter = state => state.contacts.filter\nexport const selectContacts = state => state.contacts.items\n\nexport const selectIsLoading=state => state.contacts.isLoading\nexport const  selectError=state => state.contacts.error\n\nexport const selectFilterContacts = createSelector(\n    [selectFilter, selectContacts],\n  \n    (filter, contacts) =>\n    contacts?.filter(contact=>\n        contact.name.toLowerCase().includes(filter.toLowerCase()) ,\n      ),\n  );\n\n\n \n\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid'\nimport css from './Form.module.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {addContact} from 'redux/Contacts/operations'\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {selectContacts} from 'redux/Contacts/selectors'\n\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\n\nexport const Form =() => {\n\n const [name, setName] = useState('')\n const [number, setNumber] = useState('')\n\n const dispatch = useDispatch();\nconst contacts = useSelector(selectContacts);\nconsole.log(contacts);\n  const nameId = nanoid()\n  const numberId = nanoid()\n\n  const handleChangeInfo = evt => {\n    const {name, value } = evt.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n        \n        case 'number':\n        setNumber(value);\n        break;\n        default:\n          return;\n    }\n  };\n \n     const handleSubmit = event => {\n        event.preventDefault()\n        const data = {\n          id: nanoid(),\n          name,\n          number,\n        };\n        const newName = contacts.find(\n          el => el.name.toLowerCase() === name.toLowerCase()\n        );\n        if (newName) {\n          Notify.failure(`${name} is already in contacts !`);\n          return\n        } else {\n          dispatch(addContact(data));\n        }\n        \n        setName('')\n        setNumber('')\n    }\n\n        return(\n<form className={css.formStyle} onSubmit={handleSubmit}>\n    <h2 className={css.title}>Phonebook</h2>\n    <div >\n          <label htmlFor={nameId} className={css.labelStyle}>\n            <p className={css.text}>Name</p>\n          </label>\n        <input\n        className={css.inputStyle}\n        id={nameId}\n  type=\"text\"\n  name=\"name\"\n  value={name}\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n  required\n  onChange={handleChangeInfo}\n/>\n</div>\n\n<div >\n          <label htmlFor={numberId} className={css.labelStyle}>\n            <p className={css.text}>Number</p>\n          </label>\n        <input\n         className={css.inputStyle}\n        id={numberId}\n        type=\"tel\"\n  value={number}\n  name=\"number\"\n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n  required\n  onChange={handleChangeInfo}\n/>\n</div>\n\n<Button type=\"submit\" width= '1000px' background-color= 'rgb(87, 160, 180)' variant=\"contained\" endIcon={<SendIcon />\n}>\nAdd contact\n</Button>\n{/* \n<button className={css.addButton} type=\"submit\" >\n          Add contact\n        </button> */}\n</form>\n        )\n    }\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"formStyle\":\"FilterByName_formStyle__zgsoM\",\"labelStyle\":\"FilterByName_labelStyle__neI+4\",\"text\":\"FilterByName_text__kru11\",\"inputStyle\":\"FilterByName_inputStyle__GuGRO\",\"addButton\":\"FilterByName_addButton__EYE3i\"};","import css from './FilterByName.module.css'\nimport {useDispatch, useSelector } from \"react-redux\";\nimport {contactsSearch} from \"redux/Contacts/slice\";\nimport {selectFilter} from 'redux/Contacts/selectors'\n\n\nexport const FilterByName = () => {\n  const dispatch = useDispatch(); \n  const filter = useSelector(selectFilter);\n\n\tconst changeFilter= data => {\n    dispatch(contactsSearch(data));\n};\n\n  return (\n    <>\n    <label className={css.formStyle}>\n      <p className={css.text}>Find contacts by name</p>\n      <input\n        className={css.inputStyle}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={filter}\n        onChange={e => changeFilter(e.target.value)}\n      />\n    </label>\n    \n\n  </>\n  )\n}","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactsList_contactsList__ZQI1L\",\"addButton\":\"ContactsList_addButton__TU9cd\",\"titleli\":\"ContactsList_titleli__O2jUM\",\"listItem\":\"ContactsList_listItem__KzRCz\",\"title\":\"ContactsList_title__Nc-fb\",\"formStyle\":\"ContactsList_formStyle__E3kCa\"};","import css from './ContactsList.module.css';\nimport { useEffect} from 'react';\nimport {useDispatch, useSelector } from \"react-redux\";\nimport {deleteContact, fetchContacts} from 'redux/Contacts/operations'\nimport { PropTypes } from \"prop-types\";\nimport {selectFilterContacts,\n  selectIsLoading, selectError\n} from 'redux/Contacts/selectors'\n\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport default function ContactsList () {\n  const dispatch = useDispatch();\n  \n  const isLoading = useSelector(selectIsLoading);\n\tconst error = useSelector(selectError);\n  const contacts = useSelector(selectFilterContacts);\n  console.log(contacts );\n\n\n  useEffect (()=>{\n    dispatch(fetchContacts())},\n    [dispatch])\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n    return(\n<>\n{isLoading && <p>Loading...</p>}\n\t\t\t{error && <h2>ERROR</h2>}\n\t\t\t{!isLoading && !error &&\n      (\n      \n      <div className={css.formStyle}>\n            <ul className={css.contactsList}>\n      {contacts?.map(({ id, name, number}) =>(\n        <li className={css.listItem} key={id}>\n          <p className={css.titleli}>\n        {name}: {number}\n      </p>\n          \n\n<Button \n onClick={() => onDeleteContact (id)}\n variant=\"contained\" startIcon={<DeleteIcon />\n}>\n        Delete\n      </Button>\n\n        \n        </li>\n      ))}\n    </ul>\n        </div>\n      )}\n      \n  </>\n)}\n\n  ContactsList.propTypes = {\n\tcontacts: PropTypes.arrayOf(\n\t\tPropTypes.exact({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tnumber: PropTypes.string.isRequired,\n\t\t})\n\t),\n};\n\n\n\n\n\n\n\n\n ","// import { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n\nimport { Form } from 'components/Form/Form';\nimport { FilterByName } from 'components/FilterByName/FilterByName';\nimport  ContactsList from 'components/ContactsList/ContactsList';\n\n\nexport default function Contacts() {\n\n\n  return (\n    <>\n    <h1>Phonebook</h1>\n    <Form />\n      <h2>Contacts</h2>\n    <FilterByName />\n     <ContactsList/>    \n    </>\n    \n  );\n}\n"],"names":["selectFilter","state","contacts","filter","selectContacts","items","selectIsLoading","isLoading","selectError","error","selectFilterContacts","createSelector","contact","name","toLowerCase","includes","Form","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","console","log","nameId","nanoid","numberId","handleChangeInfo","evt","target","value","className","css","onSubmit","event","preventDefault","data","id","find","el","Notify","addContact","htmlFor","type","pattern","title","required","onChange","Button","width","variant","endIcon","Send","FilterByName","e","contactsSearch","ContactsList","useEffect","fetchContacts","map","onClick","deleteContact","onDeleteContact","startIcon","Delete","Contacts"],"sourceRoot":""}